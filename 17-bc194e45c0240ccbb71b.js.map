{"version":3,"sources":["webpack:///./src/components/utils.js","webpack:///./src/components/Carousel.js","webpack:///./src/components/JackpotCarousel.js"],"names":["globalCssModule","mapToCssModules","className","cssModule","split","map","c","join","PropTypes","oneOfType","string","func","props","propName","componentName","Element","Error","shape","current","any","window","document","createElement","Carousel","_this","_React$Component","call","this","handleKeyPress","bind","assertThisInitialized_default","renderItems","hoverStart","hoverEnd","state","direction","indicatorClicked","getChildContext","componentDidMount","ride","setInterval","addEventListener","componentWillReceiveProps","nextProps","activeIndex","setState","componentWillUnmount","clearInterval","removeEventListener","interval","cycleInterval","next","parseInt","_this$props","pause","mouseEnter","apply","arguments","_this$props2","mouseLeave","evt","keyboard","keyCode","previous","carouselItems","_this2","slide","Object","core_browser_esm","role","item","index","isIn","React","cloneElement","in","render","_this3","_this$props3","outerClasses","classNames","innerClasses","children","filter","child","every","type","CarouselItem","onMouseEnter","onMouseLeave","Array","controlLeft","controlRight","indicators","wrappedIndicators","onClickHandler","e","Component","propTypes","number","isRequired","bool","oneOf","array","object","defaultProps","childContextTypes","items","src","src2","altText","caption","JackpotCarousel","goToIndex","onExiting","onExited","animating","nextIndex","length","newIndex","slides","CarouselItem_default","a","key","href","components_Carousel","id","CarouselIndicators_default","CarouselControl_default","directionText"],"mappings":"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","file":"17-bc194e45c0240ccbb71b.js","sourcesContent":["import isFunction from 'lodash.isfunction';\nimport PropTypes from 'prop-types';\n\n// https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\n\nexport function getOriginalBodyPadding() {\n  const style = window.getComputedStyle(document.body, null);\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nlet globalCssModule;\n\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\n\nexport function mapToCssModules(className = '', cssModule = globalCssModule) {\n  if (!cssModule) return className;\n  return className\n    .split(' ')\n    .map(c => cssModule[c] || c)\n    .join(' ');\n}\n\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\nexport function omit(obj, omitKeys) {\n  const result = {};\n  Object.keys(obj).forEach((key) => {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\nexport function pick(obj, keys) {\n  const pickKeys = Array.isArray(keys) ? keys : [keys];\n  let length = pickKeys.length;\n  let key;\n  const result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n  return result;\n}\n\nlet warned = {};\n\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n    warned[message] = true;\n  }\n}\n\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName, ...rest) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\n        `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`\n      );\n    }\n\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error(\n      'Invalid prop `' +\n        propName +\n        '` supplied to `' +\n        componentName +\n        '`. Expected prop to be an instance of Element. Validation failed.'\n    );\n  }\n}\n\nexport const targetPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.func,\n  DOMElement,\n  PropTypes.shape({ current: PropTypes.any })\n]);\n\n\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\nexport const TransitionTimeouts = {\n  Fade:     150, // $transition-fade\n  Collapse: 350, // $transition-collapse\n  Modal:    300, // $modal-transition\n  Carousel: 600 // $carousel-transition\n};\n\n// Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\nexport const TransitionPropTypeKeys = [\n  'in',\n  'mountOnEnter',\n  'unmountOnExit',\n  'appear',\n  'enter',\n  'exit',\n  'timeout',\n  'onEnter',\n  'onEntering',\n  'onEntered',\n  'onExit',\n  'onExiting',\n  'onExited'\n];\n\nexport const TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED:  'entered',\n  EXITING:  'exiting',\n  EXITED:   'exited'\n};\n\nexport const keyCodes = {\n  esc:   27,\n  space: 32,\n  enter: 13,\n  tab:   9,\n  up:    38,\n  down:  40,\n  home:  36,\n  end:   35,\n  n:     78,\n  p:     80,\n};\n\nexport const PopperPlacements = [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start'\n];\n\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n  return false;\n}\n\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (typeof target === 'string' && canUseDOM) {\n    let selection = document.querySelectorAll(target);\n    if (!selection.length) {\n      selection = document.querySelectorAll(`#${target}`);\n    }\n    if (!selection.length) {\n      throw new Error(\n        `The target '${target}' could not be identified in the dom, tip: check spelling`\n      );\n    }\n    return selection;\n  }\n  return target;\n}\n\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n  return Array.isArray(els) || (canUseDOM && typeof els.length === 'number');\n}\n\n\nexport function getTarget(target) {\n  const els = findDOMElements(target);\n  if (isArrayOrNodeList(els)) {\n    return els[0];\n  }\n  return els;\n}\n\nexport const defaultToggleEvents = ['touchstart', 'click'];\n\nexport function addMultipleEventListeners(_els, handler, _events) {\n  let els = _els;\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  let events = _events;\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (\n    !isArrayOrNodeList(els) ||\n    typeof handler !== 'function' ||\n    !Array.isArray(events)\n  ) {\n    throw new Error(`\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\n      The second must be a function.\n      The third is a string or an array of strings that represents DOM events\n    `);\n  }\n  Array.prototype.forEach.call(events, (event) => {\n    Array.prototype.forEach.call(els, (el) => {\n      el.addEventListener(event, handler);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, (event) => {\n      Array.prototype.forEach.call(els, (el) => {\n        el.removeEventListener(event, handler);\n      });\n    });\n  };\n}\n\nexport const focusableElements = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'object',\n  'embed',\n  '[tabindex]:not(.modal)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CarouselItem from '@bit/reactstrap.reactstrap.internal.carousel-item'\nimport { mapToCssModules } from './utils';\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n    this.hoverStart = this.hoverStart.bind(this);\n    this.hoverEnd = this.hoverEnd.bind(this);\n    this.state = {\n      direction: 'right',\n      indicatorClicked: false,\n    };\n  }\n\n  getChildContext() {\n    return { direction: this.state.direction };\n  }\n\n  componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    }\n\n    // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInterval(nextProps);\n    // Calculate the direction to turn\n    if (this.props.activeIndex + 1 === nextProps.activeIndex) {\n      this.setState({ direction: 'right' });\n    } else if (this.props.activeIndex - 1 === nextProps.activeIndex) {\n      this.setState({ direction: 'left' });\n    } else if (this.props.activeIndex > nextProps.activeIndex) {\n      this.setState({ direction: this.state.indicatorClicked ? 'left' : 'right' });\n    } else if (this.props.activeIndex !== nextProps.activeIndex) {\n      this.setState({ direction: this.state.indicatorClicked ? 'right' : 'left' });\n    }\n    this.setState({ indicatorClicked: false });\n  }\n\n  componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  setInterval(props = this.props) {\n    // make sure not to have multiple intervals going...\n    this.clearInterval();\n    if (props.interval) {\n      this.cycleInterval = setInterval(() => {\n        props.next();\n      }, parseInt(props.interval, 10));\n    }\n  }\n\n  clearInterval() {\n    clearInterval(this.cycleInterval);\n  }\n\n  hoverStart(...args) {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n    if (this.props.mouseEnter) {\n      this.props.mouseEnter(...args);\n    }\n  }\n\n  hoverEnd(...args) {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n    if (this.props.mouseLeave) {\n      this.props.mouseLeave(...args);\n    }\n  }\n\n  handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  }\n\n  renderItems(carouselItems, className) {\n    const { slide } = this.props;\n    return (\n      <div role=\"listbox\" className={className}>\n        {carouselItems.map((item, index) => {\n          const isIn = (index === this.props.activeIndex);\n          return React.cloneElement(item, {\n            in: isIn,\n            slide: slide,\n          });\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { cssModule, slide, className } = this.props;\n    const outerClasses = mapToCssModules(classNames(\n      className,\n      'carousel',\n      slide && 'slide'\n    ), cssModule);\n\n    const innerClasses = mapToCssModules(classNames(\n      'carousel-inner'\n    ), cssModule);\n\n    // filter out booleans, null, or undefined\n    const children = this.props.children.filter(child => child !== null && child !== undefined && typeof child !== 'boolean');\n\n    const slidesOnly = children.every(child => child.type === CarouselItem);\n\n    // Rendering only slides\n    if (slidesOnly) {\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          {this.renderItems(children, innerClasses)}\n        </div>\n      );\n    }\n\n    // Rendering slides and controls\n    if (children[0] instanceof Array) {\n      const carouselItems = children[0];\n      const controlLeft = children[1];\n      const controlRight = children[2];\n\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          {this.renderItems(carouselItems, innerClasses)}\n          {controlLeft}\n          {controlRight}\n        </div>\n      );\n    }\n\n    // Rendering indicators, slides and controls\n    const indicators = children[0];\n    const wrappedOnClick = (e) => {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        this.setState({ indicatorClicked: true }, () => indicators.props.onClickHandler(e));\n      }\n    };\n    const wrappedIndicators = React.cloneElement(indicators, { onClickHandler: wrappedOnClick });\n    const carouselItems = children[1];\n    const controlLeft = children[2];\n    const controlRight = children[3];\n\n    return (\n      <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n        {wrappedIndicators}\n        <div className=\"carousel-inner\">\n            {this.renderItems(carouselItems, innerClasses)}\n        </div>\n        {controlLeft}\n        {controlRight}\n        <div className=\"games-gallery__overlay\" />\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // eslint-disable-next-line react/no-unused-prop-types\n  interval: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  cssModule: PropTypes.object,\n  className: PropTypes.string,\n};\n\nCarousel.defaultProps = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true,\n};\n\nCarousel.childContextTypes = {\n  direction: PropTypes.string\n};\n\nexport default Carousel;","import React from 'react'\nimport CarouselItem from '@bit/reactstrap.reactstrap.internal.carousel-item'\nimport CarouselControl from '@bit/reactstrap.reactstrap.internal.carousel-control'\nimport CarouselIndicators from '@bit/reactstrap.reactstrap.internal.carousel-indicators'\nimport Carousel from './Carousel'\n\n\n\nconst items = [\n  {\n    src:\n      'https://www.chumbacasino.com/wp-content/uploads/2019/05/game_curOutReelLongZhiBaoZang-256x400.png',\n      src2:'https://www.chumbacasino.com/wp-content/uploads/2019/05/LongZhiBaoZang_title.png',\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n  },\n  {\n    src:\n    'https://www.chumbacasino.com/wp-content/uploads/2018/11/game_cutOutReel-256x400.png',\n    src2:'https://www.chumbacasino.com/wp-content/uploads/2018/11/rr_game-logo.png',\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n  },\n  {\n    src:\n      'https://www.chumbacasino.com/wp-content/uploads/2018/11/game_cutOutStamp-256x400.png',\n      src2:'https://www.chumbacasino.com/wp-content/uploads/2018/11/stampedethunder_game_logo.png',\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n  },\n]\n\nclass JackpotCarousel extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { activeIndex: 0 }\n    this.next = this.next.bind(this)\n    this.previous = this.previous.bind(this)\n    this.goToIndex = this.goToIndex.bind(this)\n    this.onExiting = this.onExiting.bind(this)\n    this.onExited = this.onExited.bind(this)\n  }\n\n  onExiting() {\n    this.animating = true\n  }\n\n  onExited() {\n    this.animating = false\n  }\n\n  next() {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === items.length - 1\n        ? 0\n        : this.state.activeIndex + 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  previous() {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? items.length - 1\n        : this.state.activeIndex - 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    const slides = items.map(item => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <a href=\"#\">\n            <div className=\"games-leftReel\">\n                {/* <img src={item.src} alt={item.altText} />\t\t\t\t\t */}\n            </div>\n\n            <div className=\"games-rightReel\">\n              <div className=\"games-rightReel__logo\">\n                {/* <img\n                  data-sizes=\"auto\"\n                  src2={item.src}\n                  className=\"responsive\"\n                  alt=\"\"\n                /> */}\n              </div>\n              <div className=\"games-jackpot-amount-powerShotGrand\">SC$743,733</div>\n              <div className=\"games-rightReel__jp_type games-rightReel__jp_type--fireShot\" />\n            </div>\n          </a>\n\n        </CarouselItem>\n      )\n    })\n\n    return (\n        <Carousel\n          activeIndex={activeIndex}\n          next={this.next}\n          previous={this.previous}\n          className=\"games-gallery carousel gamecarousel slide\"\n          id=\"gallery-games\"\n        >\n          <CarouselIndicators\n            items={items}\n            activeIndex={activeIndex}\n            onClickHandler={this.goToIndex}\n          />\n          {slides}\n          <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={this.previous}\n          />\n          <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={this.next}\n          />\n        </Carousel>\n    )\n  }\n}\n\nexport default JackpotCarousel\n"],"sourceRoot":""}